# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  # cancel-in-progress: false
  # that ra nen cancel vi xai debounce roi
  cancel-in-progress: true

# We are still uploading entire repo, we only need extra steps to build wheel2 and Æ°heel3
# so it's still static in a sense.
jobs:
  # Build job for multiple projects using matrix strategy
  build:
    runs-on: ubuntu-latest
    environment: debug
    strategy:
      fail-fast: false
      matrix:
        project: [wheel2, wheel3]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            doancu/${{ matrix.project }}
          sparse-checkout-cone-mode: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          # cache: yarn
          # cache-dependency-path: doancu/${{ matrix.project }}/yarn.lock

      - name: Enable Corepack
        run: corepack enable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        working-directory: doancu/${{ matrix.project }}
        run: |
          cache_dir=$(yarn cache dir 2>/dev/null)
          [ $? -ne 0 ] && cache_dir=$(yarn config get cacheFolder)
          echo "dir=$cache_dir" >> $GITHUB_OUTPUT

      - name: Get yarn lock path
        id: yarnlock-path
        run: echo "path=doancu/${{ matrix.project }}/yarn.lock" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.project }}-${{ hashFiles(steps.yarnlock-path.outputs.path) }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.project }}-
            ${{ runner.os }}-yarn-

      - name: Install dependencies for ${{ matrix.project }}
        uses: borales/actions-yarn@v4
        with:
          cmd: install
          dir: doancu/${{ matrix.project }}

      - name: Get installed Playwright version
        id: playwright-version
        working-directory: doancu/${{ matrix.project }}
        run: |
          version=$(jq -r '.dependencies["@playwright/test"] // .devDependencies["@playwright/test"] // "unknown"' package.json)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install playwright browsers
        uses: borales/actions-yarn@v4
        with:
          cmd: playwright install --with-deps
          dir: doancu/${{ matrix.project }}

      # need to build for playwright test, also only lint for errors anyway
      - name: Build ${{ matrix.project }} production
        uses: borales/actions-yarn@v4
        with:
          cmd: build
          dir: doancu/${{ matrix.project }}
        env:
          VITE_BASE_URL: /web-1-best-bag/doancu/${{ matrix.project }}/dist

      - name: Lint ${{ matrix.project }}
        continue-on-error: true
        uses: borales/actions-yarn@v4
        with:
          cmd: lint
          dir: doancu/${{ matrix.project }}

      - name: Test ${{ matrix.project }}
        continue-on-error: true
        uses: borales/actions-yarn@v4
        with:
          cmd: test
          dir: doancu/${{ matrix.project }}

      # - name: Remove node_modules for ${{ matrix.project }}
      #   uses: JesseTG/rm@v1.0.3
      #   with:
      #     path: doancu/${{ matrix.project }}/node_modules

      # - name: Remove yarn local caches for ${{ matrix.project }}
      #   uses: JesseTG/rm@v1.0.3
      #   with:
      #     path: doancu/${{ matrix.project }}/.yarn

      - name: Upload static files for ${{ matrix.project }} as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}-dist
          path: doancu/${{ matrix.project }}/dist

  # Deploy job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download wheel2 artifact
        uses: actions/download-artifact@v4
        with:
          name: wheel2-dist
          path: doancu/wheel2/dist

      - name: Download wheel3 artifact
        uses: actions/download-artifact@v4
        with:
          name: wheel3-dist
          path: doancu/wheel3/dist

      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
